name: Serverless deployment - dev stage

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'dev-*'

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: 'x64'

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - run: python -m pip install print-env --pre
      - run: npm install -g serverless @eqworks/notify
      - run: yarn install
      - run: echo "PORTUNUS_TOKEN=$PORTUNUS_TOKEN" > .env && yarn deploy --stage dev
        env:
          # aws creds for deployment
          AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
          # legion required environment variables
          PORTUNUS_TOKEN: ${{secrets.CD_PORTUNUS_TOKEN_JWT}}/19/dev

      - name: Generate tag associated release notes
        if: ${{ success() }}
        run: npx @eqworks/release changelog -v --head ${GITHUB_REF##*/} --github
        env:
          GITHUB_OWNER: EQWorks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify on deployment status
        if: ${{ always() }}
        run: notify deployment $GITHUB_REPOSITORY --commit=$GITHUB_SHA --stage=dev --status=$JOB_STATUS
        env:
          SLACK_HOOK: ${{ secrets.CD_SLACK_HOOK }}
          JOB_STATUS: ${{ job.status }}
