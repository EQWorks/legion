name: Serverless deployment - dev stage

on:
  push:
    branches:
      - master
    tags:
      - 'dev-*'

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - run: npm install -g serverless @eqworks/notify
      - run: yarn install
      - run: sls deploy --stage dev
        env:
          # aws creds for deployment
          AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
          # legion required environment variables
          SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN}}
          SLACK_SIGNING_SECRET: ${{secrets.SLACK_SIGNING_SECRET}}
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
          NETLIFY_TOKEN: ${{secrets.NETLIFY_TOKEN}}
          YELP_API_KEY: ${{secrets.YELP_API_KEY}}
          ASANA_TOKEN: ${{secrets.ASANA_TOKEN}}
          SLACK_OAUTH: ${{secrets.SLACK_OAUTH}}

      - name: Notify on deployment success
        if: success()
        run: notify deployment $GITHUB_REPOSITORY --commit=$GITHUB_SHA --stage=dev
        env:
          SLACK_HOOK: ${{secrets.SLACK_HOOK}}

      - name: Notify on deployment failure
        if: failure()
        run: notify deployment $GITHUB_REPOSITORY --commit=$GITHUB_SHA --stage=dev --success=false
        env:
          SLACK_HOOK: ${{secrets.SLACK_HOOK}}
